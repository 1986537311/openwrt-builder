#
# 打包晶晨固件,请勿修改文件名称（pack_armvirt.yml）
#

name: Build OpenWrt with lede

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      code_name:
        description: '请选择源码'
        required: true
        default: 'lede'
        type: choice
        options:
          - 'lede'
          - 'immortalwrt'
          - 'official'
      openwrt_board:
        description: "Select device board"
        required: false
        default: "all"
        type: choice
        options:
          - all
          - s922x_s905x3_s905d_s912_s905l3a
          - r66s_r68s_h66k_h68k_e25
          - eaidk-610_king3399_tn3399_kylin3399
          - vplus_tqc-a01_tanix-tx6
          - a311d
          - s922x
          - s922x-reva
          - s922x-ct2000
          - s905x3
          - s905x3-b
          - s905x2
          - s912
          - s912-m8s
          - s905d
          - s905d-ki
          - s905x
          - s905w
          - s905
          - s905l2
          - s905l3
          - s905l3a
          - s905l3b
          - s905lb-r3300l
          - rock5b
          - h88k
          - r66s
          - r68s
          - h66k
          - h68k
          - e25
          - eaidk-610
          - king3399
          - tn3399
          - kylin3399
          - beikeyun
          - l1pro
          - vplus
          - tqc-a01
          - tanix-tx6
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "5.15.85_6.1.1"
        type: choice
        options:
          - 5.4.225_5.10.160_5.15.85
          - 5.4.225_5.10.160
          - 5.10.160_5.15.85
          - 5.15.85_6.1.1
          - 5.4.225
          - 5.10.160
          - 5.15.85
          - 6.1.1
      auto_kernel:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean
      kernel_repo:
        description: "Set the kernel repository"
        required: false
        default: "https://github.com/ophub/kernel/tree/main/pub"
      openwrt_size:
        description: "Set the rootfs size(Unit: MiB)"
        required: false
        default: "1024"
      UPLOAD_FIRMWARE:
        description: '上传固件到 Github Artifacts'
        required: false
        default: 'true'
        type: boolean
      UPLOAD_RELEASE:
        description: '发布固件到 Github Releases'
        required: false
        default: 'true'
        type: boolean
      UPLOAD_WETRANSFER:
        description: '上传固件到 WETRANSFER'
        required: false
        default: 'false'
        type: boolean
        
  push:
    branches:
      - main
    paths:
      - '.github/workflows/pack_arm'

env:
  GITHUB_LINK: https://github.com/${{github.repository}}
  GIT_ACTOR: ${{github.actor}}
  GIT_REPOSITORY: ${{github.repository}}
  TZ: America/New_York
  gh_token: ${{ secrets.GH_TOKEN }}

jobs:
  build:
    name: 打包晶晨固件
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:    
    - name: 准备结束
      uses: actions/checkout@v3

    - name: 读取脚本设置
      run: |
        if [[ -f "relevance/amlogic.ini" ]] && [[ -z "${{ github.event.inputs.openwrt_board }}" ]]; then
          source relevance/amlogic.ini
        fi
        if [[ -n "${{ github.event.inputs.code_name }}" ]]; then
          echo "code_name=${{ github.event.inputs.code_name }}" >> ${GITHUB_ENV}
        else
          echo "code_name=${code_name}" >> ${GITHUB_ENV}
        fi
        if [[ -n "${{ github.event.inputs.openwrt_board }}" ]]; then
          echo "openwrt_board=${{ github.event.inputs.openwrt_board }}" >> ${GITHUB_ENV}
        else
          echo "openwrt_board=${openwrt_board}" >> ${GITHUB_ENV}
        fi
        if [[ -n "${{ github.event.inputs.openwrt_kernel }}" ]]; then
          echo "openwrt_kernel=${{ github.event.inputs.openwrt_kernel }}" >> ${GITHUB_ENV}
        else
          echo "openwrt_kernel=${openwrt_kernel}" >> ${GITHUB_ENV}
        fi
        if [[ -n "${{ github.event.inputs.auto_kernel }}" ]]; then
          echo "auto_kernel=${{ github.event.inputs.auto_kernel }}" >> ${GITHUB_ENV}
        else
          echo "auto_kernel=${auto_kernel}" >> ${GITHUB_ENV}
        fi
        if [[ -n "${{ github.event.inputs.kernel_repo }}" ]]; then
          echo "kernel_repo=${{ github.event.inputs.kernel_repo }}" >> ${GITHUB_ENV}
        else
          echo "kernel_repo=${kernel_repo}" >> ${GITHUB_ENV}
        fi
        if [[ -n "${{ github.event.inputs.openwrt_size }}" ]]; then
          echo "openwrt_size=${{ github.event.inputs.openwrt_size }}" >> ${GITHUB_ENV}
        else
          echo "openwrt_size=${openwrt_size}" >> ${GITHUB_ENV}
        fi
        
        if [[ -n "${{ github.event.inputs.UPLOAD_FIRMWARE }}" ]]; then
          echo "UPLOAD_FIRMWARE=${{ github.event.inputs.UPLOAD_FIRMWARE }}" >> ${GITHUB_ENV}
        else
          echo "UPLOAD_FIRMWARE=${UPLOAD_FIRMWARE}" >> ${GITHUB_ENV}
        fi
        if [[ -n "${{ github.event.inputs.UPLOAD_RELEASE }}" ]]; then
          echo "UPLOAD_RELEASE=${{ github.event.inputs.UPLOAD_RELEASE }}" >> ${GITHUB_ENV}
        else
          echo "UPLOAD_RELEASE=${UPLOAD_RELEASE}" >> ${GITHUB_ENV}
        fi
        if [[ -n "${{ github.event.inputs.UPLOAD_WETRANSFER }}" ]]; then
          echo "UPLOAD_WETRANSFER=${{ github.event.inputs.UPLOAD_WETRANSFER }}" >> ${GITHUB_ENV}
        else
          echo "UPLOAD_WETRANSFER=${UPLOAD_WETRANSFER}" >> ${GITHUB_ENV}
        fi

      
    - name: 部署编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        source ${GITHUB_WORKSPACE}/build/common/common.sh && Diy_update
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    
    - name: 建立打包文件夹
      working-directory: /workdir
      run: |
        df -hT $PWD
        mkdir -p openwrt/bin/targets/armvirt/64
        cd openwrt/bin/targets/armvirt/64
        wget -q ${GITHUB_LINK}/releases/download/targz/openwrt-armvirt-64-default-rootfs.tar.gz -O openwrt-armvirt-64-default-rootfs.tar.gz
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        echo "build_tag=OpenWrt_${{ env.code_name }}_$(date +"%m.%d.%H%M")" >> ${GITHUB_OUTPUT}

    - name: Build OpenWrt firmware
      uses: ophub/amlogic-s9xxx-openwrt@main
      with:
        openwrt_path: openwrt/bin/targets/*/*/*rootfs.tar.gz
        openwrt_board: ${{ env.openwrt_board }}
        openwrt_kernel: ${{ env.openwrt_kernel }}
        auto_kernel: ${{ env.auto_kernel }}
        kernel_repo: ${{ env.kernel_repo }}
        openwrt_size: ${{ env.openwrt_size }}
        gh_token: ${{ secrets.GH_TOKEN }}
         
    - name: 上传固件在 github actions
      if: steps.compile.outcome == 'success' && env.UPLOAD_FIRMWARE == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: OpenWrt-${{ env.source_codename }}-${{ env.date }}-firmware
        path: ${{ env.FIRMWARE_PATH }}
        
    - name: 发布固件到 Github Releases
      uses: ncipollo/release-action@main
      with:
        tag: ${{ steps.compile.outputs.build_tag }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        allowUpdates: true
        token: ${{ secrets.GH_TOKEN }}
        body: |
          This is OpenWrt firmware for Amlogic and Rockchip
          * Firmware information
          Default IP: 192.168.1.1
          Default username: root
          Default password: password
          Default WIFI name: OpenWrt
          Default WIFI password: none
          Install to EMMC: Login to OpenWrt → System → Amlogic Service → Install OpenWrt
          
    - name: 上传固件到「WeTransfer」
      if: steps.compile.outcome == 'success' && env.UPLOAD_WETRANSFER == 'true'
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${{ env.FIRMWARE_PATH }} 2>&1 | tee wetransfer.log
        echo "##### WETRANSFER：$(cat wetransfer.log | grep https | cut -f3 -d" ")" >> update_log.txt
        sed -i "s/Download Link/WETRANSFER/g" wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
